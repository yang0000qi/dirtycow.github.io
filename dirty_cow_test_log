#Create process

 内核空间中存放的是内核代码和数据，而进程的用户空间中存放的是用户程序的代码和数据

	当创建一个新的进程时，都要为新进程创建一个新的页面目录PGD，并从内核的页面目录swapper_pg_dir中复制内核区间页面目录项至新建进程页面目录PGD的相应位置，具体过程如下：
	do_fork() --> copy_mm() --> mm_init() --> pgd_alloc() --> set_pgd_fast() --> get_pgd_slow() --> memcpy(&PGD + USER_PTRS_PER_PGD, swapper_pg_dir + USER_PTRS_PER_PGD, (PTRS_PER_PGD - USER_PTRS_PER_PGD) * sizeof(pgd_t))
 这样一来，每个进程的页面目录就分成了两部分，第一部分为“用户空间”，用来映射其整个进程空间（0x0000 0000－0xBFFF FFFF）即3G字节的虚拟地址；第二部分为“系统空间”，用来映射（0xC000 0000－0xFFFF FFFF）1G字节的虚拟地址。可以看出Linux系统中每个进程的页面目录的第二部分是相同的，所以从进程的角度来看，每个进程有4G字节的虚拟空间， 较低的3G字节是自己的用户空间，最高的1G字节则为与所有进程以及内核共享的系统空间。

Linux imx6solosabresd 3.10.53-1.1.0_ga+gref:re #1 PREEMPT Sun Nov 6 02:40:00 CST 2016 armv7l GNU/Linux


dirty cow：




no task:
real    0m30.323s
user    0m0.030s
sys     0m14.580s

real    0m30.616s
user    0m0.070s
sys     0m14.800s

ten times:
real    5m12.114s
user    0m0.450s
sys     2m30.160s


play vedio:

real    0m42.687s
user    0m0.020s
sys     0m16.420s
real    0m43.574s
user    0m0.050s
sys     0m16.010s

real    0m43.353s
user    0m0.040s
sys     0m16.290s

ten time

real    7m11.766s
user    0m0.480s
sys     2m43.750s

no dirty cow:
Linux imx6solosabresd 3.10.53-1.1.0_ga+gaee8bf4 #2 PREEMPT Wed Nov 16 17:17:03 CST 2016 armv7l GNU/Linux

ten times:
real    5m11.078s
user    0m0.430s
sys     2m30.250s

real    0m30.613s
user    0m0.080s
sys     0m14.840s

real    0m30.529s
user    0m0.050s
sys     0m14.870s



